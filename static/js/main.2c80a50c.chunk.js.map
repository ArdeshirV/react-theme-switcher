{"version":3,"sources":["constants/index.js","providers/ThemeProvider.jsx","components/NameBox.jsx","components/ThemeSwitcher.jsx","data/Styles.js","App.jsx","index.js"],"names":["THEME_TYPE","ThemeContext","createContext","ThemeProvider","group","useState","theme","setTheme","Provider","value","children","NameBox","useContext","className","ThemeSwitcher","themeMode","data-testid","type","defaultChecked","onChange","e","console","log","Theme","background","text","divider","Styles","StyleTag","Helmet","App","ReactDOM","render","document","getElementById"],"mappings":"6MAAaA,EACL,OADKA,EAEJ,QCCIC,EAAeC,0BAEfC,EAAgB,SAACC,GAAW,IAAD,EACZC,mBAAS,CACjCC,MAAON,IAF6B,mBAC/BM,EAD+B,KACxBC,EADwB,KAItC,OACC,cAACN,EAAaO,SAAd,CAAuBC,MAAO,CAACH,EAAOC,GAAtC,SACEH,EAAMM,YCQIC,EAdC,WAAO,IAAD,EACUC,qBAAWX,GADrB,6BAEpB,OACE,qBAAKY,UAAU,MAAf,SACE,sBAAMA,UAAU,aAAhB,yEC2BSC,EAhCO,WAAM,MAGIF,qBAAWX,GAHf,mBAGnBc,EAHmB,KAGRR,EAHQ,KAgB1B,OACE,sBAAKM,UAAU,mBAAf,UACE,wBAAOA,UAAU,SAAjB,UACE,uBACEG,cAAY,gBACZC,KAAK,WACLC,eAAgBH,EAAUT,QAAUN,EACpCmB,SAlBkB,SAACC,GACzBC,QAAQC,IAAI,kBAAmBP,EAAUT,OACtCS,EAAUT,QAAUN,EACrBO,EAAS,CAAED,MAAMN,IAGjBO,EAAS,CAAED,MAAMN,IAEnBqB,QAAQC,IAAI,cAAeP,EAAUT,UAYjC,sBAAMO,UAAU,oBAElB,sBAAMA,UAAU,kBAAhB,2B,OC7BAU,GAAK,mBACRvB,EAAmB,CAClBwB,WAAY,UACZC,KAAM,uBACNC,QAAS,wBAJF,cAMR1B,EAAkB,CACjBwB,WAAY,UACZC,KAAM,OACNC,QAAS,8BATF,GAmBIC,EANA,SAACrB,GAAD,0CACWiB,EAAMjB,GAAOkB,WADxB,mCAEOD,EAAMjB,GAAOmB,KAFpB,uCAGWF,EAAMjB,GAAOoB,QAHxB,QCNTE,EAAW,WAAO,IAAD,EACShB,qBAAWX,GADpB,mBACdc,EADc,UAGrB,OADAM,QAAQC,IAAIP,EAAUT,OAEpB,cAACuB,EAAA,EAAD,UACE,gCAAQF,EAAOZ,EAAUT,YAkBhBwB,MAbf,WAEE,OACE,cAAC,EAAD,UACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCrBRC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2c80a50c.chunk.js","sourcesContent":["export const THEME_TYPE = {\n  DARK: \"DARK\",\n  LIGHT: \"LIGHT\",\n};\n","import React, {useState, createContext} from \"react\";\nimport { THEME_TYPE } from \"../constants\";\n\nexport const ThemeContext = createContext();\n\nexport const ThemeProvider = (group) => {\n  const [theme, setTheme] = useState({\n    theme: THEME_TYPE.LIGHT,\n  });\n  return (\n  \t<ThemeContext.Provider value={[theme, setTheme]}>\n  \t\t{group.children}\n\t</ThemeContext.Provider>\n  );\n};\n\n","// import React from \"react\";\nimport React, { useState, useContext } from \"react\";\nimport {ThemeContext} from \"../providers/ThemeProvider\";\nimport { THEME_TYPE } from \"../constants\";\n\nconst NameBox = () => {\n  const [themeMode, setTheme] = useContext(ThemeContext);\n  return (\n    <div className=\"box\">\n      <span className=\"text-color\">\n      \t{/*\n      \tthemeMode === THEME_TYPE.DARK ? \"DARK\" : \"LIGHT\"\n      \t*/ }\n      \tLorem ipsum, dolor sit amet consectetur adipisicing elit\n      </span>\n    </div>\n  );\n};\n\nexport default NameBox;\n","import React, { useContext } from \"react\";\nimport { THEME_TYPE } from \"../constants\";\nimport {ThemeContext} from \"../providers/ThemeProvider\";\n\nconst ThemeSwitcher = () => {\n  // No need to change *return* part\n  // You have to set theme based on context\n  const [themeMode, setTheme] = useContext(ThemeContext);\n  \n  const handleThemeChange = (e) => {\n    console.log(\"current Value: \"+ themeMode.theme);\n    if(themeMode.theme === THEME_TYPE.LIGHT) {\n      setTheme({ theme:THEME_TYPE.DARK });\n    }\n    else {\n      setTheme({ theme:THEME_TYPE.LIGHT });\n    }\n    console.log(\"new Value: \"+ themeMode.theme);\n  };\n\n  return (\n    <div className=\"switch-container\">\n      <label className=\"switch\">\n        <input\n          data-testid=\"theme-changer\"\n          type=\"checkbox\"\n          defaultChecked={themeMode.theme === THEME_TYPE.DARK}\n          onChange={handleThemeChange}\n        />\n        <span className=\"slider round\"></span>\n      </label>\n      <span className=\"text-color bold\">Dark mode</span>\n    </div>\n  );\n};\n\nexport default ThemeSwitcher;\n","import { THEME_TYPE } from \"../constants\";\n\nconst Theme = {\n  [THEME_TYPE.LIGHT]: {\n    background: \"#fafafa\",\n    text: \"#rgba(0, 0, 0, 0.87)\",\n    divider: \"rgba(0, 0, 0, 0.12)\",\n  },\n  [THEME_TYPE.DARK]: {\n    background: \"#303030\",\n    text: \"#fff\",\n    divider: \"rgba(255, 255, 255, 0.12)\",\n  },\n};\n\nconst Styles = (theme) => `\nbody {background-color: ${Theme[theme].background};}\n.text-color {color: ${Theme[theme].text};}\n.box {border: 1px solid ${Theme[theme].divider}}\n`;\n\nexport default Styles;\n","// import React from \"react\";\nimport React, { useState, useContext } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport NameBox from \"./components/NameBox\";\nimport ThemeSwitcher from \"./components/ThemeSwitcher\";\nimport { THEME_TYPE } from \"./constants\";\nimport Styles from \"./data/Styles\";\nimport {ThemeContext, ThemeProvider} from \"./providers/ThemeProvider\";\n\nconst StyleTag = () => {\n  const [themeMode, setTheme] = useContext(ThemeContext);\n  console.log(themeMode.theme);\n  return (\n    <Helmet>\n      <style>{Styles(themeMode.theme)}</style>\n    </Helmet>\n  );\n};\n\nfunction App() {\n\n  return (\n    <ThemeProvider>\n      <div>\n        <StyleTag />\n        <NameBox />\n        <ThemeSwitcher />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}